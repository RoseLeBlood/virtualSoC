.TH "Vcsos.mm.vmjo" 3 "Sun May 28 2017" "Version 0.6.2" "virtualSoC" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Vcsos.mm.vmjo
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBVcsos\&.mm\&.vmoperator\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "bool \fBParseAndRun\fP (\fBParserFactory\fP factory)"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "string \fBName\fP\fC [get]\fP"
.br
.ti -1c
.RI "string \fBInfo\fP\fC [get]\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
.SH "Member Function Documentation"
.PP 
.SS "bool Vcsos\&.mm\&.vmjo\&.ParseAndRun (\fBParserFactory\fP factory)"

.PP
Implements \fBVcsos\&.mm\&.vmoperator\fP\&.
.PP
.nf
37         {
38             InstructionParam2 param1 = factory\&.getParam(4);
39             int param1V = VM\&.Instance\&.Ram\&.Read32(VM\&.Instance\&.CurrentCore\&.Register\&.ip + 5);
40 
41             if (VM\&.Instance\&.CurrentCore\&.Register\&.OverFlow)
42             {
43                 if (param1 == InstructionParam2\&.Value || param1 == InstructionParam2\&.Lable)
44                     VM\&.Instance\&.CurrentCore\&.Register\&.Set("IP", param1V);
45                 else if (param1 == InstructionParam2\&.Register)
46                 {
47                     VM\&.Instance\&.CurrentCore\&.Register\&.Set("IP", VM\&.Instance\&.CurrentCore\&.Register\&.Get(factory\&.m_pRegisters[param1V]\&.Name));
48                 }
49                 else if (param1 == InstructionParam2\&.Pointer)
50                 {
51                     VM\&.Instance\&.CurrentCore\&.Register\&.Set("IP", MemoryMap\&.Read32(param1V));
52                 }
53             }
54             else
55                 VM\&.Instance\&.CurrentCore\&.Register\&.Set("IP", VM\&.Instance\&.CurrentCore\&.Register\&.ip + 9);
56             return true;
57         }
.fi
.SH "Property Documentation"
.PP 
.SS "string Vcsos\&.mm\&.vmjo\&.Info\fC [get]\fP"

.SS "string Vcsos\&.mm\&.vmjo\&.Name\fC [get]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for virtualSoC from the source code\&.
