.TH "Vcsos.mm.vmor" 3 "Sun May 28 2017" "Version 0.6.2" "virtualSoC" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Vcsos.mm.vmor
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBVcsos\&.mm\&.vmoperator\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "bool \fBParseAndRun\fP (\fBParserFactory\fP factory)"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "string \fBName\fP\fC [get]\fP"
.br
.ti -1c
.RI "string \fBInfo\fP\fC [get]\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
.SH "Member Function Documentation"
.PP 
.SS "bool Vcsos\&.mm\&.vmor\&.ParseAndRun (\fBParserFactory\fP factory)"

.PP
Implements \fBVcsos\&.mm\&.vmoperator\fP\&.
.PP
.nf
36         {
37             InstructionParam2 param1 = factory\&.getParam(4); // 101 4 105
38             int param1V = VM\&.Instance\&.Ram\&.Read32 (VM\&.Instance\&.CurrentCore\&.Register\&.ip + 5); //106
39 
40             InstructionParam2 param2 = factory\&.getParam(9); // 110 4 114
41             int param2V = VM\&.Instance\&.Ram\&.Read32 (VM\&.Instance\&.CurrentCore\&.Register\&.ip + 10); //115 
42 
43             InstructionParam2 param3 = factory\&.getParam(14); // 119 4 123 
44             int param3V = VM\&.Instance\&.Ram\&.Read32 (VM\&.Instance\&.CurrentCore\&.Register\&.ip + 15);
45 
46 
47             if (param2 == InstructionParam2\&.Value)
48                 VM\&.Instance\&.CurrentCore\&.Register\&.Stack\&.Push32 (param2V);
49             else if (param2 == InstructionParam2\&.Register) {
50                 VM\&.Instance\&.CurrentCore\&.Register\&.Stack\&.Push32 (VM\&.Instance\&.CurrentCore\&.Register\&.Get (factory\&.m_pRegisters [param2V]\&.Name));
51             }
52             else if (param2 == InstructionParam2\&.Pointer)
53                 VM\&.Instance\&.CurrentCore\&.Register\&.Stack\&.Push32 (MemoryMap\&.Read32 (param2V));
55             if (param3 == InstructionParam2\&.Value)
56                 VM\&.Instance\&.CurrentCore\&.Register\&.Stack\&.Push32 (param3V);
57             else if (param3 == InstructionParam2\&.Register) {
58                 VM\&.Instance\&.CurrentCore\&.Register\&.Stack\&.Push32 (VM\&.Instance\&.CurrentCore\&.Register\&.Get (factory\&.m_pRegisters [param3V]\&.Name));
59             }
60             else if (param3 == InstructionParam2\&.Pointer)
61                 VM\&.Instance\&.CurrentCore\&.Register\&.Stack\&.Push32 (MemoryMap\&.Read32 (param3V));
63             if (param1 == InstructionParam2\&.Pointer)
64                 MemoryMap\&.Write (VM\&.Instance\&.CurrentCore\&.Or( VM\&.Instance\&.CurrentCore\&.Register\&.Stack\&.Pop32 (), VM\&.Instance\&.CurrentCore\&.Register\&.Stack\&.Pop32 () ), (uint)param1V);
65             else if (param1 == InstructionParam2\&.Register)
66                 VM\&.Instance\&.CurrentCore\&.Register\&.Set (factory\&.m_pRegisters [param1V]\&.Name, VM\&.Instance\&.CurrentCore\&.Or( VM\&.Instance\&.CurrentCore\&.Register\&.Stack\&.Pop32 (), VM\&.Instance\&.CurrentCore\&.Register\&.Stack\&.Pop32 () ));
67             
68             return true;
69         }
.fi
.SH "Property Documentation"
.PP 
.SS "string Vcsos\&.mm\&.vmor\&.Info\fC [get]\fP"

.SS "string Vcsos\&.mm\&.vmor\&.Name\fC [get]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for virtualSoC from the source code\&.
